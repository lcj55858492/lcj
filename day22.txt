1.简答题
  简述常见的6种设计原则并简要描述。

2.编程题
  编程实现单例设计模式，要求编写饿汉式和懒汉式。
-----------------------------------------------------------------------------------
今天内容：
   (1)常见的设计模式
   (2)常见的查找算法
   (3)常见的排序算法

1.常见的设计模式
1.1 基本概念
   设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。

1.2 基本分类
   创建型模式：工厂方法模式、抽象工厂模式、单例设计模式(要求会写)
   结构型模式：装饰模式、代理模式(要求会说)
   行为型模式：模板设计模式、观察者模式(以后讲到)

2.常见的查找算法(重点)
2.1 线性查找算法(顺序查找算法)
(1)算法流程
   a.使用目标元素与样本数列中的第一个元素起依次比较；
   b.若找到与目标元素相等的元素，则表示查找成功；
   c.若所有元素与目标元素比较完毕也没有相等的元素，则表示查找失败；

2.2 二分查找算法(折半查找算法)
(1)算法流程
   a.使用目标元素与样本数列(升序)中的中间元素比较大小，若相等则表示查找成功；
   b.若目标元素小于中间元素，则应该去中间元素的左边进行查找；
   c.若目标元素大于中间元素，则应该去中间元素的右边进行查找；
   d.重复步骤a，直到比较完毕所有该比较元素也没有相等的元素，则表示查找失败；

3.常见的排序算法
3.1 冒泡排序算法(重中之重)
(1)算法流程
   a.比较相邻位置的两个元素，若第一个元素比第二个元素大则交换两个元素的位置；
   b.从开始的第一对元素一直到结尾的最后一对元素两两比较，经过这一步，最后的
     元素将是这组元素的最大值；
   c.重复步骤b，持续对越来越少的元素进行比较，直到处理完毕所有元素为止；
     (直到任意相邻位置的元素都无需发生交换为止)

3.2 插入排序算法(理解思想)
(1)算法流程
   a.若只看第一个元素，则可以认定该元素已经有序；
   b.取出下一个元素，让取出的元素与左边的有序数列从右向左依次比较；
   c.若取出的元素小于左边的元素，则左边的元素右移，也就是赋值到下一个位置；
   d.若取出的元素大于等于左边的元素，则将取出的元素插入到左边元素的右边；
   e.重复步骤b，直到处理完毕所有元素为止；

3.3 选择排序算法(理解思想)
(1)算法流程
   a.取出一个元素并假定该元素是最小值，使用min记录下标；
   b.使用min记录的元素与后续元素依次比较大小；
   c.若找到比min记录的最小值还小的元素，则使用min记录该元素的下标；
   d.直到min记录的最小值与后续元素全部比较完毕后，则交换min记录的最小值和最开始
     假定的最小值，经过这一步，最前面的元素将是所有元素中的最小值；
   e.重复步骤a，直到处理完毕所有元素为止；

3.4 快速排序算法(重点、难点)
(1)算法流程
   a.选择样本数列中的中间元素作为基准值，单独保存起来；
   b.分别使用左右两边的元素依次和基准值比较大小，将所有比基准值小的元素放在左边，
     将所有大于等于基准值的元素放在右边，这个过程叫分组；
   c.分别对左右两边的元素再次分组，直到处理完毕所有元素为止；

作业：
   复习和总结JavaSE阶段的所有内容！！！


   























